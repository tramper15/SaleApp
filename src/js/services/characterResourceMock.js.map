{"version":3,"sources":["services/characterResourceMock.ts"],"names":[],"mappings":"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","file":"characterResourceMock.js","sourcesContent":["/// <reference path=\"../../../typings/jquery/jquery.d.ts\" />\r\n\r\nmodule characterApp.common {\r\n    var mockResource = angular\r\n        .module('characterResourceMock',\r\n            ['ngMockE2E']);\r\n\r\n    mockResource.run(mockRun);\r\n\r\n    mockRun.$inject = ['$httpBackend'];\r\n    function mockRun($httpBackend: ng.IHttpBackendService) : void {\r\n        var characters: characterApp.models.ICharacterModel[] = [];\r\n        var character: characterApp.models.ICharacterModel;\r\n\r\n       character = new characterApp.models.Character('Toni', 'Bennet', 1);\r\n       characters.push(character);\r\n       character = new characterApp.models.Character('Katie', 'Bennet', 2);\r\n       characters.push(character);\r\n       character = new characterApp.models.Character('Kenie', 'Davidson', 3);\r\n       characters.push(character);\r\n       character = new characterApp.models.Character('Sean', 'Kuda', 4);\r\n       characters.push(character);\r\n\r\n       var characterUrl = '/api/products';\r\n\r\n       $httpBackend['whenGET'](characterUrl).respond(characters);\r\n\r\n       var editingRegex = new RegExp(characterUrl + '/[0-9][0-9]*', '');\r\n       $httpBackend['whenGET'](editingRegex).respond(function(method, url, data) {\r\n           var product = { 'productId': 0 };\r\n           var parameters = url.split('/');\r\n           var length = parameters.length;\r\n           var id = +parameters[length - 1];\r\n\r\n           if (id > 0) {\r\n               for (var i = 0; i < characters.length; i++) {\r\n                   if (characters[i].characterId === id) {\r\n                       character = characters[i];\r\n                       break;\r\n                   }\r\n               }\r\n           }\r\n           return [200, character, {}];\r\n       });\r\n\r\n        // Catch all for testing purposes\r\n        $httpBackend['whenGET'](/api/).respond(function(method, url, data) {\r\n            return [200, character, {}];\r\n        });\r\n\r\n        // Pass through any requests for application files\r\n        $httpBackend['whenGET'](/app/).passThrough();\r\n    }\r\n}\r\n"]}